{
    "cells": [
        {
            "cell_type": "markdown",
            "id": "88a1e51b",
            "metadata": {},
            "source": ["## Lyrics Scraping Results"],
        },
        {
            "cell_type": "code",
            "execution_count": 11,
            "id": "3a8ff274",
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": [
                        "<class 'pandas.core.frame.DataFrame'>\n",
                        "RangeIndex: 386 entries, 0 to 385\n",
                        "Data columns (total 2 columns):\n",
                        " #   Column  Non-Null Count  Dtype \n",
                        "---  ------  --------------  ----- \n",
                        " 0   0       386 non-null    object\n",
                        " 1   1       386 non-null    object\n",
                        "dtypes: object(2)\n",
                        "memory usage: 6.2+ KB\n",
                    ],
                }
            ],
            "source": [
                "# library imports\n",
                "import os\n",
                "import pandas as pd\n",
                "from os import listdir\n",
                "from os.path import isfile, join\n",
                "\n",
                "# data imports\n",
                'data_path = "/Users/dayoorigunwa/code_base/music_mapping/data/"\n',
                "allfiles = [f for f in listdir(data_path) if isfile(join(data_path, f))]\n",
                'lyric_file = "SpotifySongLyrics.csv"\n',
                "\n",
                "# sanity check \n",
                "lyric_df = pd.read_csv(data_path + lyric_file)\n",
                "lyric_df.info()",
            ],
        },
        {
            "cell_type": "code",
            "execution_count": 12,
            "id": "53a8f85a",
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": [
                            "<div>\n",
                            "<style scoped>\n",
                            "    .dataframe tbody tr th:only-of-type {\n",
                            "        vertical-align: middle;\n",
                            "    }\n",
                            "\n",
                            "    .dataframe tbody tr th {\n",
                            "        vertical-align: top;\n",
                            "    }\n",
                            "\n",
                            "    .dataframe thead th {\n",
                            "        text-align: right;\n",
                            "    }\n",
                            "</style>\n",
                            '<table border="1" class="dataframe">\n',
                            "  <thead>\n",
                            '    <tr style="text-align: right;">\n',
                            "      <th></th>\n",
                            "      <th>0</th>\n",
                            "      <th>1</th>\n",
                            "    </tr>\n",
                            "  </thead>\n",
                            "  <tbody>\n",
                            "    <tr>\n",
                            "      <th>count</th>\n",
                            "      <td>386</td>\n",
                            "      <td>386</td>\n",
                            "    </tr>\n",
                            "    <tr>\n",
                            "      <th>unique</th>\n",
                            "      <td>386</td>\n",
                            "      <td>380</td>\n",
                            "    </tr>\n",
                            "    <tr>\n",
                            "      <th>top</th>\n",
                            "      <td>Then the Quiet Explosion</td>\n",
                            "      <td>[Intro]Mustard on that beat, ho[Refrain]Back i...</td>\n",
                            "    </tr>\n",
                            "    <tr>\n",
                            "      <th>freq</th>\n",
                            "      <td>1</td>\n",
                            "      <td>2</td>\n",
                            "    </tr>\n",
                            "  </tbody>\n",
                            "</table>\n",
                            "</div>",
                        ],
                        "text/plain": [
                            "                               0  \\\n",
                            "count                        386   \n",
                            "unique                       386   \n",
                            "top     Then the Quiet Explosion   \n",
                            "freq                           1   \n",
                            "\n",
                            "                                                        1  \n",
                            "count                                                 386  \n",
                            "unique                                                380  \n",
                            "top     [Intro]Mustard on that beat, ho[Refrain]Back i...  \n",
                            "freq                                                    2  ",
                        ],
                    },
                    "execution_count": 12,
                    "metadata": {},
                    "output_type": "execute_result",
                }
            ],
            "source": ["lyric_df.describe()"],
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "id": "6844d722",
            "metadata": {},
            "outputs": [],
            "source": [],
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "id": "e7c92a8a",
            "metadata": {},
            "outputs": [],
            "source": [],
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "id": "1f2d9d7d",
            "metadata": {},
            "outputs": [],
            "source": [],
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "id": "5394b566",
            "metadata": {},
            "outputs": [],
            "source": [],
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "id": "c704a30e",
            "metadata": {},
            "outputs": [],
            "source": [
                '#     id_to_name = {playlist["id"]: playlist["name"] for playlist in my_playlists}\n',
                "#     for filename in onlyfiles:\n",
                '#         if "-" in filename:\n',
                '#             playlist_id = filename.split("-")[-1].split(".")[0]\n',
                "#             if playlist_id in list(id_to_name.keys()):\n",
                "#                 os.rename(\n",
                "#                     data_path + filename,\n",
                "#                     data_path\n",
                "#                     + filename.replace(playlist_id, id_to_name[playlist_id]),\n",
                "#                 )",
            ],
        },
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3 (ipykernel)",
            "language": "python",
            "name": "python3",
        },
        "language_info": {
            "codemirror_mode": {"name": "ipython", "version": 3},
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython3",
            "version": "3.7.4",
        },
    },
    "nbformat": 4,
    "nbformat_minor": 5,
}
